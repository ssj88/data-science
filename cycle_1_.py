# -*- coding: utf-8 -*-
"""cycle 1 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xEwL35ugwjrCwbCJ8bUa0U78RQeZ18Pd
"""

import numpy as np
x=np.array([1,2,3,4,5,6,7,8,9])
print("intial aray\n",x)
x.shape=[3,3]
print("\n after dimension change\n",x)
y=x.tolist()
print("\narray into list\n",y)

import numpy as np
x=np.zeros(10)
print(x)
print("update sixth value to 11")
x[6]=11
print(x)

import numpy as np
x=np.array([[12,16],[5,10]])
y=np.array([[8,23],[14,8]])
print("comparing array x with y")
print("\n array x \n",x)
print("\n array y \n",y)
print("\n greater")
print(np.greater(x,y))
print("\nless")
print(np.less(x,y))
print("\n less_equal")
print(np.less_equal(x,y))

import numpy as np
array=np.arange(30,71,2)
print("Array of all the even integers from 30 to 70")
print(array)

import numpy as np
x= np.identity(3)
print('3 x 3 identity matrix')
print(x)

import numpy as np
import os
x = np.arange(4).reshape(2, 2)
print("orginal array:")
print(x)
header='col1 col2'
np.savetxt('temp.txt',x,fmt="%d",header=header)
print("after loading")
result = np.loadtxt('temp.txt')
print(result)

import numpy as np
x=np.array([12,16])
y=np.array([12,23])
print("array x \n",x)
print("\n array of y \n",y)
print("\n after comparison \n",np.equal(x,y))

import numpy as np 
print("enter the elements of first matrix - 2 X 2");
elements = list(map(int,input().split()))
a=np.array(elements).reshape(2,2);
print("enter the elements of second matrix - 2 X 2");
elements = list(map (int,input().split()));
b=np.array(elements).reshape(2,2);
print("\n first matrix \n",a)
print("\n second matrix \n",b)
print("\n dot product of first and second matrix");
np.dot(a,b)

import numpy as np
a= np.arange(10).reshape((2,5))
print("Matrix A\n",a)
b=np.transpose(a)
print("transpose of matrix A \n",b)

import numpy as np
a= np.arange(9).reshape((3,3))
print("matrix A\n",a)
b=np.trace(a)
print("\n trace of matrix A \n ",b)

import numpy  as np 
a=np.arange(9).reshape((3,3))
print("\nmatrix A\n",a)
b=np.linalg.matrix_rank(a)
print("rank of matrix A:",b)

import numpy as np
a=np.array([[50,29],[30,44]])
print("\n determinent of the matrix:")
print(np.linalg.det(a))

import numpy as np
x=np.array([[4,3],[3,2]])
y=np.linalg.inv(x)
print("\n matrix x \n",x)
print("inverse of matrix x \n",y)

import numpy  as np 
from numpy.linalg import eig 
a= np.array([[0,2],[2,3]])
print("matrix \n",a)
val,vec=eig(a)
print("\n eigen value :",val)
print("\n eign vector:\n",vec)

import matplotlib.pyplot as plt
import numpy  as np
xpoints= np.array([1,2,6,18])
ypoints=np.array([3,10,12,20])
plt.plot(xpoints,ypoints,marker='o',color='y',linestyle=':',mfc='r',mec='g',ms='15')
plt.show()

import matplotlib.pyplot as plt 
import numpy as np
xp=[12,14,16,18,20,22,24]
yp=[100,200,250,400,200,450,500]
plt.plot(xp,yp)
plt.xlabel("temp")
plt.ylabel("sales")
plt.show()

import matplotlib.pyplot as plt

with open("plot.txt") as f:
    data = f.read()
    
data = data.split('\n')

x = [row.split(' ')[0] for row in data]
y = [row.split(' ')[1] for row in data]
plt.plot(x, y)

plt.xlabel('x axis')
plt.ylabel('y axis')
plt.title('graph')
plt.show()

import matplotlib.pyplot as plt
x1=[1,8,13]
y1=[8,12,18]
plt.plot(x1,y1,label = "line 1")
x2=[10,2,30]
y2=[40,10,13]
plt.plot(x2,y2,label = "line 2")
plt.title('graph with 2 lines')
plt.xlabel('x- axis')
plt.ylabel('y-axis')
plt.legend()
plt.show()

import matplotlib.pyplot as plt 
plt.subplot(2,3,4)
plt.xticks(())
plt.yticks(())
plt.subplot(2,3,5)
plt.xticks(())
plt.yticks(())
plt.subplot(2,3,6)
plt.xticks(())
plt.yticks(())
plt.show()

import matplotlib.pyplot as plt
math_mark=[88,92,80,89,100,80,60,100,80,34]
science_mark=[35,79,79,48,100,88,32,45,20,30]
marks_range=[10,20,30,40,50,60,70,80,90,100]
plt.scatter(marks_range, math_mark, label='math mark',color='b')
plt.scatter(marks_range,science_mark,label='science mark',color='g')
plt.title('scatter plot')
plt.xlabel('marks range')
plt.ylabel('marks scored')
plt.legend()
plt.show()



